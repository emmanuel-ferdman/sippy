import argparse
import json
import subprocess
import tempfile
import requests
import yaml

def fetch_json(url):
    response = requests.get(url)
    response.raise_for_status()
    return response.json()

def put_json(url, data):
    response = requests.put(url, json=data)
    response.raise_for_status()
    return response.json()

def edit_yaml_in_nvim(data):
    with tempfile.NamedTemporaryFile(suffix=".yaml", mode="w+", delete=False) as temp_file:
        yaml.dump(data, temp_file, default_flow_style=False, sort_keys=False)
        temp_file.flush()
        temp_filename = temp_file.name
    
    subprocess.run(["nvim", temp_filename])
    
    with open(temp_filename, "r") as temp_file:
        edited_data = yaml.safe_load(temp_file)
    
    return edited_data

def update_triage(triage_id):
    url = f"http://127.0.0.1:8080/api/component_readiness/triages/{triage_id}"
    
    print(f"Fetching data from {url}...")
    data = fetch_json(url)
    
    print("Opening in nvim for editing...")
    edited_data = edit_yaml_in_nvim(data)
    
    print(f"Updating {url} with new data...")
    put_json(url, edited_data)
    print("Update successful.")

def main():
    parser = argparse.ArgumentParser(description="Triage tool")
    subparsers = parser.add_subparsers(dest="command", required=True)
    
    update_parser = subparsers.add_parser("update", help="Update a triage entry")
    update_parser.add_argument("ID", type=int, help="Triage ID")
    
    args = parser.parse_args()
    
    if args.command == "update":
        update_triage(args.ID)

if __name__ == "__main__":
    main()

